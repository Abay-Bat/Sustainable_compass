import { useState, useEffect } from "react";
import { Dialog, DialogContent, DialogHeader, DialogTitle, DialogDescription } from "./ui/dialog";
import { Button } from "./ui/button";
import { Badge } from "./ui/badge";
import { Card } from "./ui/card";
import { CheckCircle, X } from "lucide-react";

interface PricingModalProps {
  isOpen: boolean;
  onClose: () => void;
}

export function PricingModal({ isOpen, onClose }: PricingModalProps) {
  const pricingPlans = [
    {
      name: "–°—Ç–∞—Ä—Ç–∞–ø",
      icon: "üìä",
      subtitle: "–ë–∞–∑–æ–≤—ã–µ IT-—Ä–µ—à–µ–Ω–∏—è",
      employees: "–¥–æ 50 —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤",
      price: "99 000 ‚ÇΩ",
      period: "/–º–µ—Å—è—Ü",
      features: [
        "–ë–∞–∑–æ–≤–∞—è ESG –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞",
        "–û–±–ª–∞—á–Ω–æ–µ —Ö—Ä–∞–Ω–µ–Ω–∏–µ 500 –ì–ë",
        "–¢–µ—Ö–ø–æ–¥–¥–µ—Ä–∂–∫–∞ 24/7",
        "–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–µ –æ—Ç—á–µ—Ç—ã",
        "API –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è"
      ],
      isPopular: false,
      buttonText: "–í—ã–±—Ä–∞—Ç—å –ø–ª–∞–Ω",
      color: "blue"
    },
    {
      name: "Avantgard",
      icon: "üëë",
      subtitle: "–ü—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–µ —Ä–µ—à–µ–Ω–∏—è —Å –ò–ò",
      employees: "50-500 —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤",
      price: "299 000 ‚ÇΩ",
      period: "/–º–µ—Å—è—Ü",
      features: [
        "ESG –∞–Ω–∞–ª–∏—Ç–∏–∫–∞ —Å –ò–ò",
        "–û–±–ª–∞—á–Ω–æ–µ —Ö—Ä–∞–Ω–µ–Ω–∏–µ 500 –ì–ë",
        "–¢–µ—Ö–ø–æ–¥–¥–µ—Ä–∂–∫–∞ 24/7",
        "–ê–≤—Ç–æ–º–∞—Ç–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –æ—Ç—á–µ—Ç—ã",
        "API –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è",
        "–ò–ò –±–ª–æ–∫—á–µ–π–Ω"
      ],
      isPopular: true,
      buttonText: "–í—ã–±—Ä–∞—Ç—å –ø–ª–∞–Ω",
      color: "purple"
    },
    {
      name: "Quantum",
      icon: "‚ö°",
      subtitle: "–ò–Ω—Ç–µ–ª–ª–µ–∫—Ç—É–∞–ª—å–Ω–æ–µ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ",
      employees: "500+ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤",
      price: "599 000 ‚ÇΩ",
      period: "/–º–µ—Å—è—Ü",
      features: [
        "–ü–æ–ª–Ω–∞—è ESG —ç–∫–æ—Å–∏—Å—Ç–µ–º–∞",
        "–ù–µ–æ–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω–æ–µ —Ö—Ä–∞–Ω–µ–Ω–∏–µ",
        "–ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç–Ω–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞",
        "–ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π –º–µ–Ω–µ–¥–∂–µ—Ä",
        "–ö–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω–∞—è –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è"
      ],
      isPopular: false,
      buttonText: "–í—ã–±—Ä–∞—Ç—å –ø–ª–∞–Ω",
      color: "green"
    },
    {
      name: "Enterprise+",
      icon: "üöÄ",
      subtitle: "–≠–∫—Å–∫–ª—é–∑–∏–≤–Ω—ã–µ —Ä–µ—à–µ–Ω–∏—è",
      employees: "–ö–æ—Ä–ø–æ—Ä–∞—Ü–∏–∏ –∏ –≥–æ—Å—Å–µ–∫—Ç–æ—Ä",
      price: "–ø–æ –∑–∞–ø—Ä–æ—Å—É",
      period: "",
      features: [
        "–ò–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω–∞—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∞",
        "–í—ã–¥–µ–ª–µ–Ω–Ω–∞—è –∏–Ω—Ñ—Ä–∞—Å—Ç—Ä—É–∫—Ç—É—Ä–∞",
        "–ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞",
        "SLA 99.9%",
        "–ö–æ–º–ø–ª–µ–∫—Å–Ω–∞—è –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å"
      ],
      isPopular: false,
      buttonText: "–°–≤—è–∑–∞—Ç—å—Å—è",
      color: "orange"
    }
  ];

  const getCardBgColor = (color: string, isPopular: boolean) => {
    if (isPopular) return "bg-purple-600 text-white";
    return "bg-white";
  };

  const getIconBgColor = (color: string) => {
    const colors = {
      blue: "bg-blue-100",
      purple: "bg-purple-100",
      green: "bg-green-100", 
      orange: "bg-orange-100"
    };
    return colors[color as keyof typeof colors] || "bg-gray-100";
  };

  return (
    <Dialog open={isOpen} onOpenChange={onClose}>
      <DialogContent className="max-w-6xl max-h-[90vh] overflow-y-auto">
        <DialogHeader className="text-center mb-8">
          <div className="flex justify-between items-start mb-4">
            <div className="flex-1">
              <DialogTitle className="text-2xl font-medium text-gray-900 mb-2">
                –ü–ª–∞–Ω—ã IT-—Ä–µ—à–µ–Ω–∏–π –¥–ª—è –≤–∞—à–µ–≥–æ –±–∏–∑–Ω–µ—Å–∞
              </DialogTitle>
              <DialogDescription className="text-gray-600">
                –í—ã–±–µ—Ä–∏—Ç–µ –ø–æ–¥—Ö–æ–¥—è—â–∏–π –ø–ª–∞–Ω —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏—á–µ—Å–∫–∏—Ö —Ä–µ—à–µ–Ω–∏–π
              </DialogDescription>
            </div>
            <Button 
              variant="ghost" 
              size="sm" 
              onClick={onClose}
              className="flex-shrink-0 ml-4"
            >
              <X className="w-4 h-4" />
            </Button>
          </div>
        </DialogHeader>

        <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6">
          {pricingPlans.map((plan, index) => (
            <Card
              key={plan.name}
              className={`relative p-6 transition-all duration-300 ${
                plan.isPopular 
                  ? 'transform scale-105 shadow-xl border-2 border-purple-300' 
                  : 'shadow-md hover:shadow-lg'
              } ${getCardBgColor(plan.color, plan.isPopular)}`}
            >
              {/* Popular badge */}
              {plan.isPopular && (
                <div className="absolute -top-3 left-1/2 transform -translate-x-1/2">
                  <Badge className="bg-black text-white px-3 py-1 text-xs">
                    –ü–æ–ø—É–ª—è—Ä–Ω—ã–π
                  </Badge>
                </div>
              )}

              {/* Icon */}
              <div className={`w-12 h-12 rounded-lg flex items-center justify-center mx-auto mb-4 ${
                plan.isPopular ? 'bg-white/20' : getIconBgColor(plan.color)
              }`}>
                <span className="text-xl">{plan.icon}</span>
              </div>

              {/* Plan name and subtitle */}
              <div className="text-center mb-4">
                <h3 className={`font-medium mb-1 ${
                  plan.isPopular ? 'text-white' : 'text-gray-900'
                }`}>
                  {plan.name}
                </h3>
                <p className={`text-sm ${
                  plan.isPopular ? 'text-white/80' : 'text-gray-600'
                }`}>
                  {plan.subtitle}
                </p>
                <p className={`text-xs mt-1 ${
                  plan.isPopular ? 'text-white/70' : 'text-gray-500'
                }`}>
                  {plan.employees}
                </p>
              </div>

              {/* Pricing */}
              <div className="text-center mb-6">
                <div className={`text-xl font-medium ${
                  plan.isPopular ? 'text-white' : 'text-gray-900'
                }`}>
                  {plan.price}
                  {plan.period && (
                    <span className={`text-sm font-normal ${
                      plan.isPopular ? 'text-white/70' : 'text-gray-500'
                    }`}>
                      {plan.period}
                    </span>
                  )}
                </div>
              </div>

              {/* Features dropdown */}
              <div className="mb-6">
                <details className="group">
                  <summary className={`cursor-pointer text-sm mb-3 ${
                    plan.isPopular ? 'text-white/90' : 'text-gray-600'
                  } hover:${plan.isPopular ? 'text-white' : 'text-gray-900'} transition-colors`}>
                    –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å, —á—Ç–æ –≤–∫–ª—é—á–∞–µ—Ç ‚ñº
                  </summary>
                  <ul className="space-y-2 mt-3">
                    {plan.features.map((feature, featureIndex) => (
                      <li key={featureIndex} className={`flex items-start gap-2 text-xs ${
                        plan.isPopular ? 'text-white/80' : 'text-gray-600'
                      }`}>
                        <CheckCircle className={`w-3 h-3 mt-0.5 flex-shrink-0 ${
                          plan.isPopular ? 'text-white/80' : 'text-green-600'
                        }`} />
                        <span>{feature}</span>
                      </li>
                    ))}
                  </ul>
                </details>
              </div>

              {/* Button */}
              <Button 
                className={`w-full text-sm ${
                  plan.isPopular 
                    ? 'bg-black text-white hover:bg-gray-800' 
                    : 'bg-white text-gray-900 border border-gray-300 hover:bg-gray-50'
                }`}
                variant={plan.isPopular ? "default" : "outline"}
              >
                {plan.buttonText}
              </Button>
            </Card>
          ))}
        </div>

        {/* Footer note */}
        <div className="text-center mt-8 text-sm text-gray-500">
          <p>–í—Å–µ –ø–ª–∞–Ω—ã –≤–∫–ª—é—á–∞—é—Ç –±–µ—Å–ø–ª–∞—Ç–Ω—ã–π –ø—Ä–æ–±–Ω—ã–π –ø–µ—Ä–∏–æ–¥ 14 –¥–Ω–µ–π</p>
          <p className="mt-1">–í–æ–∑–º–æ–∂–Ω–∞ –æ–ø–ª–∞—Ç–∞ –≤ —Ä–∞—Å—Å—Ä–æ—á–∫—É ‚Ä¢ –°–∫–∏–¥–∫–∏ –¥–ª—è –æ–±—Ä–∞–∑–æ–≤–∞—Ç–µ–ª—å–Ω—ã—Ö —É—á—Ä–µ–∂–¥–µ–Ω–∏–π</p>
        </div>
      </DialogContent>
    </Dialog>
  );
}